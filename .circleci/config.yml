version: 2
jobs:
  build:
    docker:
      - image: 

    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            docker build -t ./udagram-api-feed triplek254/udagram-api-feed:latest
            - docker build -t ./udagram-api-user triplek254/udagram-api-user:latest
            - docker build -t ./udagram-frontend triplek254/udagram-frontend:latest
            - docker build -t ./reverseproxy triplek254/reverseproxy:latest

            - docker login -u triplek254 -p kelvin97?

            - docker push triplek254/udagram-api-feed:latest
            - docker push triplek254/reverseproxy:latest
            - docker push triplek254/udagram-api-user:latest
            - docker push triplek254/udagram-frontend:latest
           
      - run:
          name: Run Tests
          command: |
            . helloworld/bin/activate
            python test_hello_world.py
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image
          command: |
            . helloworld/bin/activate
            pyinstaller -F hello_world.py
            docker build -t ariv3ra/$IMAGE_NAME:$TAG .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push ariv3ra/$IMAGE_NAME:$TAG
      - run:
          name: Deploy app to Digital Ocean Server via Docker
          command: |
            ssh -o StrictHostKeyChecking=no root@hello.dpunks.org "/bin/bash ./deploy_app.sh ariv3ra/$IMAGE_NAME:$TAG"





version: 2
  jobs:
    build:
      branches:
        only:
          - main
          - dev
        docker:
          # specify the version you desire here
          - image: circleci/node:8.0
          - image: docker:17.09.1-ce-git  # enable the docker build support
       working_directory: ~/repo
         steps:
           - checkout
           - setup_remote_docker
           # Download and cache dependencies
           - restore_cache:
             keys:
               - v1-dependencies-{{ checksum "package.json" }}
               # fallback to using the latest cache if no exact match is found
               - v1-dependencies-
    
          # clearing the cache
          - run: npm cache clear --force
          # - run: rm package-lock.json
          - run: npm install
          - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
          # run tests!
          # - run: npm run test

          # build the docker image on success
          - run:
            name: Build Success
            when: on_success
            command: |
              docker --version
              docker login -u=triplek254 -p=kelvin97?
              docker build -t ../udagram-api-feed triplek254/udagram-api-feed:latest
              docker build -t ../udagram-api-user triplek254/udagram-api-user:latest
              docker build -t ../udagram-frontend triplek254/udagram-frontend:latest
              docker build -t ../reverseproxy triplek254/reverseproxy:latest

            # docker build -t <docker_account>/<application_name>:$CIRCLE_BRANCH --build-arg MACHINE_NAME=<application_name>-$CIRCLE_BRANCH .
            # docker push <docker_account>/<application_name>:$CIRCLE_BRANCH
              docker push triplek254/udagram-api-feed:latest
              docker push triplek254/reverseproxy:latest
              docker push triplek254/udagram-api-user:latest
              docker push triplek254/udagram-frontend:latest
              echo "Docker build made sucessfully!! for <application_name> $CIRCLE_BRANCH"
          - run:
            name: Build Failure
            when: on_fail
            command: |
              echo "ERROR building <application_name> $CIRCLE_BRANCH